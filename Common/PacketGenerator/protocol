@common_path "D:/Portfolio/GameServerProject/Common/PacketDefine.h"

@section LOGIN_SERVER_PACKET
{
    @start 100
    @output_dir "D:/Portfolio/GameServerProject/01_LoginServer/"
    @output_name "PacketHandler"

    @protocol C_REQ_LOGIN
    - Login 요청
    [
        int64 accountNo
        Token token
    ]

    @protocol S_RES_LOGIN
    - Login 응답
    [
        int64   accountNo
        bool    status
        Token   token
    ]

    @protocol C_GET_SERVER_LIST
    - 서버 목록 요청
    [

    ]

    @protocol S_GET_SERVER_LIST
    - 서버 목록 응답
    [
        vector<wstring> gameServerIps
        vector<uint16>  gameServerPorts
    ]
}


@section CHAT_SERVER_PACKET
{
    @start 200
    @output_dir "D:/Portfolio/GameServerProject/02_ChatServer/"
    @output_name "PacketHandler"

    @protocol C_CHAT_LOGIN
    - 채팅서버 로그인 요청
    [
        uint64  accountId
        Token   token
    ]

    @protocol S_CHAT_LOGIN
    - 채팅서버 로그인 응답
    [
        bool status
    ]

    @protocol C_CHAT_ENTER
    - 채팅 입장
    [
        uint64  characterId
    ]

    @protocol S_CHAT_ENTER
    - 채팅 입장 응답
    [
        bool status
    ]

    @protocol C_CHAT_LEAVE
    - 채팅 퇴장
    [

    ]

    @protocol C_CHAT_MOVE_FIELD
    - 필드이동
    [
        int32 fieldId
    ]

    @protocol C_CHAT
    - 같은 필드내의 플레이어에게 채팅
    [
        uint8       chatType
        wstring     message
    ]

    @protocol S_CHAT
    - 채팅 응답
    [
        uint8       chatType
        uint64      playerId
        uint64      characterId
        wstring     nickname
        wstring     message
    ]

    @protocol C_WHISPER
    - 귓속말
    [
        wstring toNickname
        wstring message
    ]

    @protocol S_WHISPER
    - 귓속말 응답
    [
        uint64      playerId
        uint64      characterId
        wstring     nickname
        wstring     message
    ]

    @protocol S_CHAT_FAIL
    - 채팅 실패 에러메시지
    [
        int32 code
    ]


}

@section GAME_SERVER_PACKET
{
    @start 300
    @output_dir "D:/Portfolio/GameServerProject/03_GameServer/"
    @output_name "PacketHandler"


    @protocol C_GAME_LOGIN
    - 게임서버 로그인 요청
    [
        uint64  accountId
        Token   token
    ]

    @protocol S_GAME_LOGIN
    - 게임서버 로그인 응답
    [
        bool status
    ]

    @protocol C_GET_CHARACTER_LIST
    - 캐릭터 목록 요청
    [

    ]

    @protocol S_GET_CHARACTER_LIST
    - 캐릭터 목록 응답
    [
        vector<Dto_S_GET_CHARACTER_LIST> charaterList
    ]

    @protocol C_CREATE_CHARACTER
    - 캐릭터 생성 요청
    [
        wstring nickname
        int32   modelId
        int32   weaponId
    ]

    @protocol S_CREATE_CHARACTER
    - 캐릭터 생성 응답
    [
        bool status
    ]

    @protocol C_GAME_ENTER
    - 캐릭터 선택후 게임입장
    [
        uint64  characterId
        int32   idx
    ]

    @protocol S_GAME_ENTER
    - 게임 입장 응답
    [
        uint64  playerId
        uint64  characterId
    ]

    @protocol S_SPAWN_CHARACTER
    - 캐릭터 생성
    [
        uint64  playerId
        wstring nickname
        int32   level
        float32 y
        float32 x
        int32   maxHp
        int32   hp
        int32   maxMp
        int32   mp
        int32   speed
        int32   modelId
        int32   weaponId
        float32 rotation
    ]

    @protocol S_DESTROY_CHARACTER
    - 캐릭터 삭제
    [
        uint64 playerId
    ]

    @protocol C_MOVE
    - 플레이어 이동
    [
        float32 y
        float32 x
    ]

    @protocol S_MOVE
    - 다른 플레이어에게 위치 전파
    [
        uint64 playerId
        PathReceiver path
    ]

    @protocol C_SKILL
    - 공격 보고
    [
        uint64 objectId
        uint32 skillId
    ]

    @protocol S_SKILL
    - 공격 전파
    [
        uint64 playerId
        uint32 skillId
        float32 targetY
        float32 targetX
        float32 posY
        float32 posX
    ]

    @protocol S_SPAWN_MONSTER
    - 몬스터 생성
    [
        uint64 id
        uint64 objectId
        int32 maxHp
        int32 hp
        int32 speed
        float32 y
        float32 x
    ]

    @protocol S_DESTROY_OBJECT
    - 오브젝트 파괴
    [
        uint8 type
        uint64 id
    ]

    @protocol S_MOVE_OBJECT
    - 오브젝트 이동
    [
        uint8 type
        uint64 id
        PathReceiver path
    ]
    
    @protocol S_DAMAGE
    - 오브젝트 피해
    [
        uint8 type
        uint64 id
        int32 hp
    ]

    @protocol S_EXP
    - 경험치 획득
    [
        int32 curExp
    ]

    @protocol C_MOVE_FIELD
    - 필드이동
    [
        uint8 fieldId
    ]

    @protocol S_MOVE_FIELD
    - 필드이동
    [
        uint8 fieldId
    ]

    @protocol S_MONSTER_ATTACK
    - 몬스터 공격
    [
        uint64 id
        float32 y
        float32 x
        float32 yaw
    ]

    @dto
    [
        @link S_GET_CHARACTER_LIST
        (
            uint64  id
            wstring nickname
            int32   level
            int32   modelId
            int32   weaponId
            int32   fieldId
        )
    ]
}


@server LoginServer
{
    @file_name "D:/Portfolio/GameServerProject/01_LoginServer/LoginServer.h"
    @attach LOGIN_SERVER_PACKET all
}

@server ChatServer
{
    @file_name "D:/Portfolio/GameServerProject/02_ChatServer/ChatServer.h"
    @attach CHAT_SERVER_PACKET all
}


@group LoginGroup
{
    @file_name "D:/Portfolio/GameServerProject/03_GameServer/LoginGroup.h"
    @attach GAME_SERVER_PACKET
    [
        C_GAME_LOGIN,
        S_GAME_LOGIN,
    ]
}

@group LobbyGroup
{
    @file_name "D:/Portfolio/GameServerProject/03_GameServer/LobbyGroup.h"
    @attach GAME_SERVER_PACKET
    [
        C_GET_CHARACTER_LIST,
        S_GET_CHARACTER_LIST,
        C_CREATE_CHARACTER,
        S_CREATE_CHARACTER,
        C_GAME_ENTER,
    ]
}

@group GameGroup_Town
{
    @file_name "D:/Portfolio/GameServerProject/03_GameServer/GameGroup_Town.h"
    @attach GAME_SERVER_PACKET
    [
        C_MOVE,
        C_SKILL,
        C_MOVE_FIELD,
    ]
}

@dependency Token
{
    @include "Common/Token.h"
    @struct
    [
        Token,
    ]
}

@dependency PathReceiver
{
    @include "PathReceiver.h"
    @class
    [
        PathReceiver,
    ]
}